@model IEnumerable<MiniEquipmentMarketplace.Models.Equipment>
@using Microsoft.AspNetCore.Mvc.Rendering
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager
@using MiniEquipmentMarketplace.Data
@inject AppDbContext Context
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Equipment";
    
    var controller = ViewContext.RouteData.Values["controller"]?.ToString();
    var action = ViewContext.RouteData.Values["action"]?.ToString();
    var area = ViewContext.RouteData.Values["area"]?.ToString();
    var path = HttpContextAccessor.HttpContext.Request.Path;
    
    var isShopper = User.IsInRole("Shopper") && !User.IsInRole("Admin") && !User.IsInRole("Vendor");
    var isVendor = User.IsInRole("Vendor") && !User.IsInRole("Admin");
    var isAdmin = User.IsInRole("Admin");
    
    // For vendors, get their associated vendor id
    int? currentVendorId = null;
    if (isVendor)
    {
        var currentUser = await UserManager.GetUserAsync(User);
        if (currentUser != null)
        {
            var vendor = await Context.Vendors.FirstOrDefaultAsync(v => v.Email == currentUser.Email);
            if (vendor != null)
            {
                currentVendorId = vendor.VendorId;
            }
        }
    }
}


<div class="container py-4">
    <h1 class="display-4 mb-4 text-light">Equipment</h1>

    <div class="action-bar mb-4">
        @if (isShopper)
        {
            <button class="btn btn-secondary btn-lg action-btn disabled" disabled>
                <i class="fas fa-plus-circle"></i> Create New
            </button>
        }
        else
        {
            <a asp-action="Create" class="btn btn-primary btn-lg action-btn">
                <i class="fas fa-plus-circle"></i> Create New
            </a>
        }
    </div>

    <div class="card mb-4">
        <div class="card-body">
            <div class="mb-3">
                <label for="vendorFilter" class="form-label">Filter by Vendor</label>
                <select id="vendorFilter" class="form-select">
                    <option value="">All Vendors</option>
                    @foreach (var v in (ViewBag.Vendors as SelectList)!)
                    {
                        <option value="@v.Value">@v.Text</option>
                    }
                </select>
            </div>
        </div>
    </div>

    <div id="equipmentTableWrapper" class="card mb-4">
        <div class="card-body table-container">
            <div class="table-responsive">
                <table id="equipmentTable" class="table table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.Title)</th>
                            <th>@Html.DisplayNameFor(model => model.Description)</th>
                            <th>@Html.DisplayNameFor(model => model.Price)</th>
                            <th>@Html.DisplayNameFor(model => model.Vendor)</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model) {
                            var canEdit = isAdmin || (isVendor && currentVendorId == item.VendorId);
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                                <td>@Html.DisplayFor(modelItem => item.Price)</td>
                                <td>@Html.DisplayFor(modelItem => item.Vendor!.Name)</td>
                                <td class="action-buttons">
                                    @if (isShopper)
                                    {
                                        <button class="btn btn-sm btn-outline-secondary disabled" disabled>
                                            <i class="fas fa-edit"></i> Edit
                                        </button>
                                    }
                                    else if (canEdit)
                                    {
                                        <a asp-action="Edit" asp-route-id="@item.EquipmentId" class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-edit"></i> Edit
                                        </a>
                                    }
                                    else
                                    {
                                        <button class="btn btn-sm btn-outline-danger disabled" disabled title="You can only edit equipment from your vendor">
                                            <i class="fas fa-lock"></i> No Access
                                        </button>
                                    }
                                    <a asp-action="Details" asp-route-id="@item.EquipmentId" class="btn btn-sm btn-outline-info">
                                        <i class="fas fa-info-circle"></i> Details
                                    </a>
                                    @if (canEdit || isAdmin)
                                    {
                                        <a asp-action="Delete" asp-route-id="@item.EquipmentId" class="btn btn-sm btn-outline-danger">
                                            <i class="fas fa-trash"></i> Delete
                                        </a>
                                    }
                                    else
                                    {
                                        <button class="btn btn-sm btn-outline-danger disabled" disabled title="You can only delete equipment from your vendor">
                                            <i class="fas fa-trash"></i> Delete
                                        </button>
                                    }
                                    <button class="btn btn-sm btn-success request-quote" data-id="@item.EquipmentId" data-title="@item.Title" data-price="@item.Price">
                                        <i class="fas fa-file-invoice-dollar"></i> Request Quote
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://kit.fontawesome.com/9ab3d85691.js" crossorigin="anonymous"></script>
    <script>
        $(function() {
            // helper: rebuild table rows
            function renderTable(data) {
                const tbody = $('#equipmentTable tbody').empty();
                const isShopper = @Json.Serialize(isShopper);
                const isVendor = @Json.Serialize(isVendor);
                const isAdmin = @Json.Serialize(isAdmin);
                const currentVendorId = @Json.Serialize(currentVendorId);
                
                data.forEach(item => {
                    let editButton, deleteButton;
                    const canEdit = isAdmin || (isVendor && currentVendorId == item.vendorId);
                    
                    if (isShopper) {
                        editButton = `<button class="btn btn-sm btn-outline-secondary disabled" disabled>
                                        <i class="fas fa-edit"></i> Edit
                                     </button>`;
                    } else if (canEdit) {
                        editButton = `<a href="/Equipment/Edit/${item.equipmentId}" class="btn btn-sm btn-outline-primary">
                                        <i class="fas fa-edit"></i> Edit
                                     </a>`;
                    } else {
                        editButton = `<button class="btn btn-sm btn-outline-danger disabled" disabled title="You can only edit equipment from your vendor">
                                        <i class="fas fa-lock"></i> No Access
                                     </button>`;
                    }
                    
                    if (canEdit || isAdmin) {
                        deleteButton = `<a href="/Equipment/Delete/${item.equipmentId}" class="btn btn-sm btn-outline-danger">
                                          <i class="fas fa-trash"></i> Delete
                                       </a>`;
                    } else {
                        deleteButton = `<button class="btn btn-sm btn-outline-danger disabled" disabled title="You can only delete equipment from your vendor">
                                          <i class="fas fa-trash"></i> Delete
                                       </button>`;
                    }
                    
                    tbody.append(`
                        <tr>
                            <td>${item.title}</td>
                            <td>${item.description}</td>
                            <td>${item.price}</td>
                            <td>${item.vendor.name}</td>
                            <td class="action-buttons">
                                ${editButton}
                                <a href="/Equipment/Details/${item.equipmentId}" class="btn btn-sm btn-outline-info">
                                    <i class="fas fa-info-circle"></i> Details
                                </a>
                                ${deleteButton}
                                <button class="btn btn-sm btn-success request-quote" data-id="${item.equipmentId}" data-title="${item.title}" data-price="${item.price}">
                                    <i class="fas fa-file-invoice-dollar"></i> Request Quote
                                </button>
                            </td>
                        </tr>
                    `);
                });
            }

            // 1) Filter by vendor
            $('#vendorFilter').on('change', function() {
                const vid = $(this).val();
                let url = '/api/EquipmentApi';
                if (vid) {
                    // only append when a real vendor is chosen
                    url += '?vendorId=' + encodeURIComponent(vid);
                }
                $.get(url)
                    .done(renderTable)
                    .fail((xhr, status, err) => {
                        console.error('Filter error:', status, err);
                        alert('Failed to filter equipment.');
                    });
            });

            // 2) Handle Request Quote clicks
            $('#equipmentTableWrapper').on('click', '.request-quote', function() {
                const id = $(this).data('id');
                const title = $(this).data('title');
                const price = $(this).data('price');
                
                if (confirm(`Request a quote for ${title} at $${price}?`)) {
                    // Create a form and submit it
                    const form = $('<form></form>')
                        .attr('method', 'post')
                        .attr('action', '/Equipment/RequestQuote')
                        .css('display', 'none');
                    
                    // Add anti-forgery token
                    form.append($('@Html.AntiForgeryToken()'));
                    
                    // Add equipment ID
                    form.append($('<input>')
                        .attr('type', 'hidden')
                        .attr('name', 'id')
                        .attr('value', id));
                    
                    // Append to body and submit
                    $('body').append(form);
                    form.submit();
                }
            });
        });
    </script>
}

<style>
    /* Full‑screen particle background */
    #particles-js {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 0;
        background: #333333;
    }

    .content-container {
        position: relative;
        z-index: 1;
    }

    .card {
        background: rgba(255, 255, 255, 0.9);
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        border: none;
        color: #212529;
    }

    .table {
        margin-bottom: 0;
    }

    .table-hover tbody tr:hover {
        background-color: rgba(0, 0, 0, 0.05);
    }

    .table thead {
        border-radius: 10px 10px 0 0;
        overflow: hidden;
    }

    .action-buttons {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
    }

    .action-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .btn-primary {
        background: #1a472a;
        border-color: #163d24;
    }

    .btn-primary:hover {
        background: #163d24;
        border-color: #12321d;
    }

    .modal-content {
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
    }

    .modal-header {
        border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        background: #f8f9fa;
        border-radius: 10px 10px 0 0;
    }

    .modal-footer {
        border-top: 1px solid rgba(0, 0, 0, 0.1);
        background: #f8f9fa;
        border-radius: 0 0 10px 10px;
    }

    .action-btn {
        padding: 1rem 2rem;
        font-size: 1.2rem;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .action-btn:hover {
        transform: translateY(-3px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    }

    .action-btn i {
        margin-right: 0.5rem;
    }

    /* Modal improvements */
    .modal-backdrop.show {
        opacity: 0.5;
    }

    .table-container {
        max-height: 60vh;
        overflow-y: auto;
        margin-bottom: 0.5rem;
        border-bottom: 1px solid rgba(0,0,0,0.05);
        position: relative;
    }
    
    .table-container::after {
        content: '';
        display: block;
        height: 10px;
        width: 100%;
        position: absolute;
        bottom: -10px;
        left: 0;
        background: linear-gradient(to bottom, rgba(0,0,0,0.05), transparent);
        pointer-events: none;
    }

    .table-responsive {
        overflow-x: auto;
    }

    .table thead {
        border-radius: 10px 10px 0 0;
        overflow: hidden;
        position: sticky;
        top: 0;
        z-index: 10;
    }
</style>